@model MvcMovie.Models.MovieGenreViewModel


@{
    ViewData["Title"] = "MovieList";
    //css pentru linu-urile de la butonae, sa se schimbe culoarea in dependenta de pozitia butonului, galben, albastru, rosu, ii dau selectov td care are ancor 
}

<h1>Movies List</h1>

<p>
    <a asp-action="Create" style="c" class="btn btn-primary">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Title: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" class="btn btn-primary" id="filterBtn" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <!--- Html.Raw(Translation.Title) ---> 
                @Html.DisplayNameFor(model => model.Movies[0].Title)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Movies[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Movies) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<form class="jsform">
    <div class="input-row">
        <label for="title">Title:</label>
        <input type="text" name="title" id="title" />
        <label for="releaseDate">Release Date:</label>
        <input type="text" name="releaseDate" id="releaseDate" />
        <label for="genre">Genre:</label>
        <input type="text" name="genre" id="genre" />
        <label for="price">Price:</label>
        <input type="text" name="price" id="price" />
        <label for="rating">Rating:</label>
        <input type="text" name="rating" id="rating" />
        <div class="btn-text-right">
            <button class="btn btn-primary">Submit</button>
        </div>
    </div>
</form>

<table class="table" id="table_id">
    <thead id="table_head">
        <tr>
            <th>Title</th>
            <th>Release Date</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Rating</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tbody"></tbody>
</table>

<script>
    const form = document.querySelector(".jsform");
    const tbodyEl = document.getElementById("tbody");
    const table = document.getElementById("table_id");

        var data_list = "";

    function onAddNote(e) {
        const header = document.getElementById('table_head');
        e.preventDefault();
        const title = document.getElementById("title").value;
            data_list = data_list+'\n'+title;
        const releaseDate = document.getElementById("releaseDate").value;
            data_list = data_list+'\n'+releaseDate;
        const genre = document.getElementById("genre").value;
            data_list = data_list+'\n'+genre;
        const price = document.getElementById("price").value;
            data_list = data_list+'\n'+price;
        const rating = document.getElementById("rating").value;
            data_list = data_list+'\n'+rating;
        const htmlData = `<tr>
            <td>${title}</td>
            <td>${releaseDate}</td>
            <td>${genre}</td>
            <td>${price}</td>
            <td>${rating}</td>
            <td><input type="button" class="btn btn-primary" value="Delete" onclick="deleteRow(this)"/></td>
        </tr>`
        console.log('elements after', header.innerHTML)

        tbodyEl.innerHTML += htmlData;  
        console.log('elements before', header.innerHTML)
        
    }

    function deleteRow(btn) {
         var row = btn.parentNode.parentNode;
         row.parentNode.removeChild(row);
    }

    form.addEventListener("submit", onAddNote);
    table.addEventListener("click", deleteRow);

</script>
